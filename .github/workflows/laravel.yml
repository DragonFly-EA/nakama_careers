name: Deploy Laravel Project on push
on:
  push:
    branches:
      - main
jobs:
  web-deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Get the latest code
        uses: actions/checkout@v2.3.2
        with:
          clean: 'false'
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - uses: actions/setup-node@master
      - name: Install Dependencies
        run: composer update
      - name: Generate key
        run: php artisan key:generate
      - name: Generate storage link
        run: php artisan storage:link
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.0.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftps
          port: 21  # Default for FTP/FTPS
          passive: true
          dangerous-clean-slate: false


#name: Deploy Laravel Project on push
#on:
#  push:
#    branches:
#      - main
#jobs:
#  web-deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    steps:
#      - name: Get the latest code
#        uses: actions/checkout@v2.3.2
#        with:
#            clean: 'false'
#      - name: Copy .env
#        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
#      - uses: actions/setup-node@master
#      - name: Install Dependencies
#        run: composer install
#      - name: Generate key
#        run: php artisan key:generate
#      - name: Generate storage link
#        run: php artisan storage:link
#      - name: Directory Permissions
#        run: chmod -R 777 storage bootstrap/cache
#      - name: ðŸ“‚ Sync files
#        uses: SamKirkland/FTP-Deploy-Action@4.0.0
#        with:
#          server: ${{ secrets.FTP_SERVER }}
#          username: ${{ secrets.FTP_USERNAME }}
#          password: ${{ secrets.FTP_PASSWORD }}
#          dangerous-clean-slate: false
#          protocol: ftps
#      - name: Execute tests (Unit and Feature tests) via PHPUnit
#        run: vendor/bin/phpunit
#        env:
#          DB_CONNECTION: mysql
#          DB_DATABASE: ${{ secrets.DB_DATABASE }}
#          DB_USERNAME: ${{ secrets.DB_USERNAME }}
#          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
